generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Auth {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String   @db.VarChar(256)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique() @db.VarChar(255)
  fullName  String     @db.VarChar(64)
  auth      Auth?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  feeds     Feed[]     @relation(name: "UserFeeds")
  bookmarks Bookmark[] @relation(name: "UserBookmarks")

  @@index(email)
}

model Feed {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  link      String     @db.VarChar(255)
  feedItems FeedItem[] @relation(name: "FeedItems")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    Int
  user      User       @relation(name: "UserFeeds", fields: [userId], references: [id], onDelete: Cascade)

  @@index(title)
  @@index(link)
}

model FeedItem {
  id           Int       @id @default(autoincrement())
  title        String    @default("") @db.VarChar(255)
  link         String    @default("") @db.VarChar(255)
  content      String    @default("") @db.Text
  feedId       Int
  feed         Feed      @relation(name: "FeedItems", fields: [feedId], references: [id], onDelete: Cascade)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isRead       Boolean   @default(false)
  bookmark     Bookmark? @relation(name: "BookmarkFeedItem")
  isBookmarked Boolean   @default(false)

  @@index(title)
  @@index(link)
}

model Bookmark {
  id         Int      @id @default(autoincrement())
  title      String   @default("") @db.VarChar(255)
  link       String   @default("") @db.VarChar(255)
  content    String   @default("") @db.Text
  feedItem   FeedItem @relation(name: "BookmarkFeedItem", fields: [feedItemId], references: [id], onDelete: Cascade)
  feedItemId Int      @unique
  user       User     @relation(name: "UserBookmarks", fields: [userId], references: [id], onDelete: Cascade)
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}
